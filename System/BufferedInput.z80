; ------------------------------------------------------------------------------
; BufferedInput.z80
; ------------------------------------------------------------------------------
; Code to handle maintaining an input buffer. Interrupt handlers can write to
; this buffer and then program code can consume character from it.
; ------------------------------------------------------------------------------
; Interis 64 Z80 Computer
; https://github.com/Interis64
; 
; Copyright 2023 Matthew Martin
; Licensed under the GNU GPL 3.0. See the LICENSE file for details.
; ------------------------------------------------------------------------------

.BUFFER_SIZE:      EQU   $3F
.FULLSIZE:         EQU   .BUFFER_SIZE - $0F
.EMPTYSIZE:        EQU   $05

.BUFFER:           DS    .BUFFER_SIZE
.WR_POINTER:       DS    2
.RD_POINTER:       DS    2
.BUFFER_USED:      DS    1

BufferedInput.Initialize:
      ; Set up the input buffer
      LD    HL, .BUFFER
      LD    (.WR_POINTER),HL
      LD    (.RD_POINTER),HL
      XOR   A                                   ;0 to accumulator
      LD    (.BUFFER_USED),A
      RET

; Accepts a byte into the buffer
BufferedInput.Accept:
      PUSH  AF
      LD    A, (.BUFFER_USED)
      CP    .BUFFER_SIZE                             ; If full then ignore
      JR    NZ, .notFull
      POP   AF
      RET
.notFull:
      LD    HL, (.WR_POINTER)
      INC   HL
      LD    A, L                                ; Only need to check low byte becasuse buffer<256 bytes
      CP    (.BUFFER+.BUFFER_SIZE) & $FF
      JR    NZ, .notWrap
      LD    HL, .BUFFER
.notWrap:
      LD    (.WR_POINTER), HL
      POP   AF
      LD    (HL), A
      PUSH  AF
      LD    A, (.BUFFER_USED)
      INC   A
      LD    (.BUFFER_USED), A
      CP    .FULLSIZE
      POP   AF
      RET

BufferedInput.Read:
      LD    A, (.BUFFER_USED)
      CP    $00
      JR    Z, BufferedInput.Read
      PUSH  HL
      LD    HL, (.RD_POINTER)
      INC   HL
      LD    A, L                                ; Only need to check low byte becasuse buffer<256 bytes
      CP    (.BUFFER+.BUFFER_SIZE) & $FF
      JR    NZ, .notRdWrap
      LD    HL, .BUFFER
.notRdWrap:
      LD    (.RD_POINTER), HL
      LD    A, (.BUFFER_USED)
      DEC   A
      LD    (.BUFFER_USED), A
      LD    A, (HL)
      POP   HL
      RET                                       ; Char ready in A

; ------------------------------------------------------------------------------
BufferedInput.IsCharAvailable:
      LD    A, (.BUFFER_USED)
      CP    $00
      RET

; ------------------------------------------------------------------------------
; Serial.z80
; ------------------------------------------------------------------------------
; MC6850P ACIA Driver
; ------------------------------------------------------------------------------
; Interis 64 Z80 Computer
; https://github.com/Interis64
; 
; Copyright 2023 Matthew Martin
; Licensed under the GNU GPL 3.0. See the LICENSE file for details.
; ------------------------------------------------------------------------------
Serial.SLOT:             EQU   SLOT2

Serial.CONTROL_PORT:     EQU   Serial.SLOT + $00
Serial.DATA_PORT:        EQU   Serial.SLOT + $01

Serial.MASTER_RESET:     EQU   00000011b
Serial.RTS_LOW:          EQU   10010110b
Serial.RTS_HIGH:         EQU   11010110b

Serial.Initialize:
    ; Send 00000011 to Control Register for Master Reset
    ; Send 00000010 to Control Register for "clock div 64"
    ;   OR 00010100 for "8 bits, 1 stop, no parity"

    ; Master Reset
    LD      A, Serial.MASTER_RESET
    OUT     (Serial.CONTROL_PORT), A

    ; Initialize the 6850 chip
    LD      A, Serial.RTS_LOW
    OUT     (Serial.CONTROL_PORT), A

    RET


; ------------------------------------------------------------------------------
Serial.TXA:
    PUSH    AF
Serial.TX_WAIT_LOOP:
    IN      A, (Serial.CONTROL_PORT)       ; Test if send buffer is full
    BIT     1, A
    JR      Z, Serial.TX_WAIT_LOOP         ; If buffer full, keep waiting
    POP     AF
    OUT     (Serial.DATA_PORT), A          ; Write the character
    RET    

; ------------------------------------------------------------------------------
Serial.IRQHandler:
    PUSH    AF
    PUSH    HL

    IN      A, (Serial.CONTROL_PORT)
    AND     $01                                 ; Check if interupt due to read buffer full
    JR      Z, Serial.IRQSkip                          ; if not, ignore

    LD      A, Serial.RTS_HIGH
    OUT     (Serial.CONTROL_PORT), A
    IN      A, (Serial.DATA_PORT)
    PUSH    AF
    LD      A, Syscall.SerialIn
    LD      (SyscallTarget), A
    POP     AF
    RST     $10
Serial.IRQSkip:
    LD      A, Serial.RTS_LOW
    OUT     (Serial.CONTROL_PORT), A
    POP     HL
    POP     AF
    EI
    RETI

SystemRAMBase:  EQU $EC00

; I/O Addresses for each hardware slot
SLOT0:          EQU $00
SLOT1:          EQU $20
SLOT2:          EQU $40
SLOT3:          EQU $60
SLOT4:          EQU $80
SLOT5:          EQU $A0
SLOT6:          EQU $C0
SLOT7:          EQU $E0

RST00:          DS $08                      ; Reset to $00: Hard reset
RST08:          DS $08
RST10:          DS $08
RST18:          DS $08
RST20:          DS $08
RST28:          DS $08
RST30:          DS $08
MINT:           DS $2E                      ; Region for the maskable interrupt handler
NMIH:           DS $9A                      ; Region for the non-maskable interrupt handler

    SECTION RST00
    JP      ROMBoot
    ENDS

    SECTION RST10
    JP      Syscall
    ENDS

ROMBoot:
    ; Set up the stack pointer
    LD      HL, SystemRAMBase               ; SP address is at the bottom of the system in RAM
    LD      SP, HL                          ; Set the stack pointer

    ; Copy system template to top of RAM
    LD      BC, $10000 - SysTemplateStart   ; Get the system size
    LD      DE, SystemRAMBase               ; Set the system destination address
    LD      HL, SysTemplateStart            ; Point HL
    LDI                                     ; Copy everything

    ; Copy root template to temp space at $8000
    LD      BC, $0100
    LD      HL, $8000
    LD      DE, $0000
    LDIR

    ; Find and initialize hardware
    CALL    VDP.Initialize
;    CALL    OPL.Initialize
    CALL    FDC.Initialize
    JP      ColdBoot

    INCLUDE "VDP/Init.z80"
;    INCLUDE "OPL/Init.z80"
    INCLUDE "FDC/Init.z80"

    INCLUDE "UpperRAMSystem.z80"